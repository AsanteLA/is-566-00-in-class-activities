-- If needed, you can set your context:
-- use role [your role];
-- use warehouse [your warehouse];
use database IS566;
use schema sql_practice;
use warehouse byu_student_wh;


-- Use a CTE to retrieve all orders along with the full names of the customers 
-- who placed them. Display the O_ORDERKEY, O_ORDERDATE, and the customer's 
-- C_FIRSTNAME and C_LASTNAME.

-- First, let's just convert this traditional query to a CTE:
SELECT O_ORDERKEY, O_ORDERDATE, C_FIRSTNAME, C_LASTNAME
from orders
JOIN customer on O_CUSTKEY = C_CUSTKEY
limit 10;

-- Converted to a CTE:







-- Use CTEs to retrieve all customers who placed orders in 2018. Display 
-- the C_FIRSTNAME, C_LASTNAME, and the total number of orders placed by 
-- each customer.

WITH Orders2018 AS (
    SELECT O_ORDERKEY, O_CUSTKEY
    FROM ORDERS
    WHERE O_ORDERDATE BETWEEN '2018-01-01' AND '2018-12-31'
),
CustomerOrderCounts AS (
    SELECT O_CUSTKEY, COUNT(*) AS Order_Count
    FROM Orders2018
    GROUP BY O_CUSTKEY
)
SELECT C.C_FIRSTNAME, C.C_LASTNAME, CO.Order_Count
FROM CustomerOrderCounts CO
JOIN CUSTOMER C ON CO.O_CUSTKEY = C.C_CUSTKEY
order by order_count desc
limit 10;

-- Use CTEs to calculate the total revenue generated by each customer in 
-- 2018. Display the customer's C_FIRSTNAME, C_LASTNAME, and their total 
-- revenue.

WITH Orders2018 AS (
    SELECT O_ORDERKEY, O_CUSTKEY, O_TOTALPRICE
    FROM ORDERS
    WHERE O_ORDERDATE BETWEEN '2018-01-01' AND '2018-12-31'
),
CustomerRevenue AS (
    SELECT O_CUSTKEY, SUM(O_TOTALPRICE) AS Total_Revenue
    FROM Orders2018
    GROUP BY O_CUSTKEY
)
SELECT C.C_FIRSTNAME, C.C_LASTNAME, CR.Total_Revenue
FROM CustomerRevenue CR
JOIN CUSTOMER C ON CR.O_CUSTKEY = C.C_CUSTKEY
limit 10;


-- Use CTEs to identify orders with more than 5 line items and calculate 
-- the total quantity for each of these orders. Display the O_ORDERKEY, 
-- O_ORDERDATE, and the total quantity of items for these large orders.

WITH LineItemCounts AS (
    SELECT L_ORDERKEY, COUNT(*) AS LineItemCount, SUM(L_QUANTITY) AS Total_Quantity
    FROM LINEITEM
    GROUP BY L_ORDERKEY
    HAVING COUNT(*) > 5
),
LargeOrders AS (
    SELECT LIC.L_ORDERKEY, LIC.Total_Quantity, O.O_ORDERDATE
    FROM LineItemCounts LIC
    JOIN ORDERS O ON LIC.L_ORDERKEY = O.O_ORDERKEY
)
SELECT L_ORDERKEY, O_ORDERDATE, Total_Quantity
FROM LargeOrders
limit 10;

WITH LineItemCounts AS (
    SELECT L_ORDERKEY, COUNT(*) AS LineItemCount, SUM(L_QUANTITY) AS Total_Quantity
    FROM LINEITEM
    GROUP BY L_ORDERKEY
),
FilteredLineItemCounts AS (
    SELECT L_ORDERKEY, Total_Quantity
    FROM LineItemCounts
    WHERE LineItemCount > 5
),
LargeOrders AS (
    SELECT FLIC.L_ORDERKEY, FLIC.Total_Quantity, O.O_ORDERDATE
    FROM FilteredLineItemCounts FLIC
    JOIN ORDERS O ON FLIC.L_ORDERKEY = O.O_ORDERKEY
)
SELECT L_ORDERKEY, O_ORDERDATE, Total_Quantity
FROM LargeOrders;


-- Use multiple CTEs to determine which customers placed orders in 2018 
-- for more than 5 line items. Display the C_FIRSTNAME, C_LASTNAME, and 
-- the total number of such orders placed by each customer.

WITH Orders2018 AS (
    SELECT O_ORDERKEY, O_CUSTKEY
    FROM ORDERS
    WHERE O_ORDERDATE BETWEEN '2018-01-01' AND '2018-12-31'
),
LineItemCounts AS (
    SELECT L_ORDERKEY, COUNT(*) AS LineItemCount
    FROM LINEITEM
    GROUP BY L_ORDERKEY
),
FilteredLineItems AS (
    SELECT L_ORDERKEY
    FROM LineItemCounts
    WHERE LineItemCount > 5
),
CustomerLargeOrderCounts AS (
    SELECT O2018.O_CUSTKEY, COUNT(*) AS LargeOrderCount
    FROM Orders2018 O2018
    JOIN FilteredLineItems FLI ON O2018.O_ORDERKEY = FLI.L_ORDERKEY
    GROUP BY O2018.O_CUSTKEY
)
SELECT C.C_FIRSTNAME, C.C_LASTNAME, CLO.LargeOrderCount
FROM CustomerLargeOrderCounts CLO
JOIN CUSTOMER C ON CLO.O_CUSTKEY = C.C_CUSTKEY;



